$(document).ready(function(){

  //open new client-side websocket
  var socket = new WebSocket("ws://localhost:8081");

  //Just preparing some variables that will be populated below
  var role
  var opp_role
  var pid

  function flashNotification(text, subtext){
    $('.notification h2').text(text);
    $('.notification h3').text(subtext);
    $('.notification').show().fadeOut(4500,function(){
      $('.notification h2').empty();
      $('.notification h3').empty();
    });
  };

  //Client makes a move
  $('.square').click(function(){
    //Ensures the selected square is not already taken
    if(!($(this).hasClass('x')) 
    && !($(this).hasClass('o'))
    //If the server has 'locked' the playboard, it will not respond to user clicks
    && !($(this).parent().hasClass('locked'))
    ){
      $('<div>' + role + '</div>').appendTo(this);
      $(this).addClass(role);
      $(this).parent().addClass('locked');
      //Send message to server with 
      console.log(pid)
      socket.send('{"move": "' + $(this).attr('data-box') + '", "role": "' + role + '", ' + '"pid": "' + pid + '"}')
    }
  });

  socket.onmessage = function(message){
    //receive number of opponent's chosen square from client
    var server_data = JSON.parse(message.data)
    if(server_data.role_assign){
      pid = server_data.pid
      role = server_data.role_assign
      //alert(server_data.notification)
      flashNotification("Tic Tac Toe", server_data.notification);
      if(role == "x"){
        opp_role = "o";
      }
      else{
        opp_role = "x";
      }
      if(server_data.unlock){
        $(document).find("#grid").removeClass('locked');
      }
    }

    function resetBoard(){
      $(".square").each(function(){$(this).removeClass("x").empty()});
      $(".square").each(function(){$(this).removeClass("o").empty()});
    }

    if(server_data.victory){
      flashNotification(server_data.victory);
      $(document).find("#grid").addClass('locked');
      $("button").show();
      $("button").click(function(){
        resetBoard();
        $('#grid').removeClass('locked');
        flashNotification("Now starting another game!")
        socket.send('{"rematch": true, "pid": "' + pid + '"}');
      });
    }

    if(server_data.pid !== pid){
      if(server_data.notification){
      flashNotification(server_data.notification);
      }
      if(server_data.opp_move){
        //Add the correct symbol to the relevant div
        var selected_box = $(document).find("[data-box=" + server_data.opp_move + "]")

        $('<div>' + opp_role + '</div>').appendTo(selected_box);

        //selected_box.text(opp_role)
        selected_box.addClass(opp_role)
        $(document).find("#grid").removeClass('locked');
      }
      if(server_data.rematch){
        resetBoard();
        flashNotification("Your opponent has challenged you to another game!");
        $('.notification h2').css("font-size","50px");
      }  
    };
  }

});